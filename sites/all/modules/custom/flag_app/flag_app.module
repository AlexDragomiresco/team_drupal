<?php

/**
 * Implement hook_menu
 */
function flag_app_menu() {
     $items['admin/structure/flags/flag_application'] = array(
    'title' => 'Flag Application',
    'description' => 'Work with the application flags',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('flag_app_form'),
//    'access callback' => 'flag_app_permission',
    'access arguments'=> array('administer flag applications'),   
    'file' => 'flag_app.admin.inc',
  );
  return $items;
}
 /**
  * Implement hook_permission()
  */

function flag_app_permission(){
  return array(
    'administer flag app' => array(
      'title'=> t('Manage flag applications'),
      'description'=> t('Accept or reject applications'),
    ),
  );
}


/**
 * Implements hooh_flag_flag
 */
function flag_app_flag_flag($flag, $entity_id, $account, $flagging) {
    if ($flag->name == 'flag_application') {
     $nid = db_insert('flag_app')
        ->fields(array('flagging_id', 'status'))
        ->values(array(
          'flagging_id' => $flagging->flagging_id,
          'status' => 0,
        ))
        ->execute();
  }
}

/**
 * Implements hook_flag_unflag
 */

function flag_app_flag_unflag($flag, $entity_id, $account, $flagging) {
 if ($flag->name == 'flag_application') {
     $nid = db_delete('flag_app')
        ->condition('flagging_id', $flagging->flagging_id)
        ->execute();
  }
}
/**
 * Implements hook_form_FORM_ID_alter
 * @param type $form
 * @param type $form_state
 */

function flag_app_form_flag_form_alter(&$form, &$form_state) {
  if($form['#flag_name'] == 'flag_application'){
    $form['flag_application'] = array(
      '#type'=> 'fieldset',
      '#title'=> 'Flag Application settings',
      '#collapsible'=> TRUE,
      'flag_application_approve_action' => array(
        '#type'=> 'checkbox',
        '#title'=> 'Disable Link',
        '#default-value'=> $form['#flag']-> flag_application_approve_action,
        '#description'=> 'Disable link for the other users when application is approved',
      ),
      'flag_application_maintain_message'=> array(
        '#type'=> 'textfield',
        '#title'=> 'Maintained message',
        '#default-value'=> $form['#flag']-> flag_application_maintain_message,
        '#description'=> 'Display if the node has an application approved for it and the link is disabled',
      )
    );
  }
}  
  
/**
 * Implements hook_flag_options_alter
 * @param type $options
 * @param type $flag
 */


function flag_app_flag_options_alter(&$options, $flag) {
    if($flag->name == 'flag_application'){
      $options['flag_application_approve_action'] = 0;
      $options['flag_application_maintain_message'] = '';
    }
}

//function flag_app_preprocess_flag(&$vars) {
//     if($vars['flag']->name == 'flag_application' && $vars['flag']->flag_application_approve_action == 1 && flag_app_application_approved($vars['entity_id']))
//       {
//          $vars['link_href'] = '';
//          $vars['link_text'] = check_plain($vars['flag']->flag_application_maintain_message);
//       }
//}
/**
 * 
 * @param type $entity_id we are checking
 * @return bool if the application has been approved
 */
//
//function flag_app_application_approved($entity_id) {
//    $query = "SELECT fa.status FROM {flag_app} fa LEFT JOIN {flagging} f ON fa.flagging_id = f.flagging_id WHERE f.entity_id = $entity_id";
//    $conditions = array(':eid' => $entity_id, ':status'=> 1);
//    if(db_query($query, $conditions)->fetchField()) {
//      return TRUE;
//    } else{
//      return FALSE;
//    }
//}

/**
 *  Implement hook_flag_default_flags
 */

function flag_app_flag_default_flags() {
  $flags = array();
// Exported flag: "Flag application".
  $flags['flag_application'] = array(
    'entity_type' => 'node',
    'title' => 'Flag application',
    'global' => '0',
    'types' =>
    array(
    ),
    'flag_short' => 'Apply',
    'flag_long' => 'Apply for this lesson',
    'flag_message' => 'Thank you !',
    'unflag_short' => 'Unflag this item',
    'unflag_long' => 'Remove',
    'unflag_message' => 'Application removed',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'weight' => 0,
    'show_in_links' =>
    
    array(
      'full' => 'full',
      'teaser' => 'teaser',
      'rss' => 0,
      'search_index' => 0,
      'search_result' => 0,
      'token' => 0,
    ),
    'show_as_field' => 1,
    'show_on_form' => 0,
    'access_author' => '',
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 3,
  );
  return $flags;
}